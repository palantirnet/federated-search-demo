<project name="federated-search-demo" default="list">
    <!-- Run with: vendor/bin/phing -->
    <!-- For a list of commands, try: vendor/bin/phing -Dbuild.env=vagrant -l -->

    <!-- Provide the <drush /> task. -->
    <taskdef name="drush" classname="Drush\Task" />


    <!-- Target: install-all -->
    <target name="install-all" description="Install all three Drupal sites in the Federated Search Demo">
        <phingcall target="install-d7" />
        <phingcall target="install-d7-domain" />
        <phingcall target="install-d8" />
        <phingcall target="install-d8-domain" />
        <property name="index.domains" value="y" />
        <phingcall target="solr-reindex" />
    </target>


    <!-- Target: install-no-domain -->
    <target name="install-no-domain" description="Install all three Drupal sites in the Federated Search Demo">
        <phingcall target="install-d7" />
        <phingcall target="install-d8" />
        <property name="index.domains" value="n" />
        <phingcall target="solr-reindex" />
    </target>


    <!-- Target: install-d8 -->
    <target name="install-d8" description="Install one of the Drupal 8 sites; specify which site with -Ddrush.root=web/d8/docroot">
        <phingcall target="init" />
        <property name="drush.root" value="web/d8/docroot" />
        <property name="site.name" value="Federated Search Drupal 8" />

        <exec command="composer install" dir="${drush.root}/.." passthru="true" />
        <phingcall target="install-drupal-by-path" />

        <!-- Create demo content -->
        <drush command="pm-enable" assume="yes">
            <param>federated_default_content</param>
        </drush>
        <!-- Copy demo files -->
        <copy todir="${drush.root}/sites/default/files" mode="777">
          <fileset dir="${drush.root}/modules/custom/federated_default_content/assets">
            <include name="**/*.jpg" />
          </fileset>
        </copy>
        <!-- Uninstall the demo content modules -->
        <drush command="pm-uninstall" assume="yes">
            <param>federated_default_content</param>
        </drush>

        <drush command="search-api:clear" assume="yes">
            <param>federated_search</param>
        </drush>

        <exec command="drush @d8 search-api:index federated_search -y" />
    </target>


    <!-- Target: install-d8-domain -->
    <target name="install-d8-domain" description="Install domain-enabled Drupal 8 sites; specify which site with -Ddrush.root=web/d8/docroot">
        <phingcall target="init" />
        <property name="drush.root" value="web/d8-domain/docroot" />
        <property name="site.name" value="Federated Search Domain 8" />

        <exec command="composer install" dir="${drush.root}/.." passthru="true" />
        <phingcall target="install-drupal-by-path" />

        <!-- Create demo content -->
        <drush command="pm-enable" assume="yes">
            <param>federated_default_content</param>
        </drush>
        <!-- Copy demo files -->
        <copy todir="${drush.root}/sites/default/files" mode="777">
          <fileset dir="${drush.root}/modules/custom/federated_default_content/assets">
            <include name="**/*.jpg" />
          </fileset>
        </copy>
        <!-- Uninstall the demo content modules -->
        <drush command="pm-uninstall" assume="yes">
            <param>federated_default_content</param>
        </drush>

        <drush command="search-api:clear" assume="yes">
            <param>federated_search</param>
        </drush>

        <exec command="drush @d8-domain.one search-api:index federated_search -y" />

        <!-- Rebuild node acces permissions. No direct drush command for this
             as per https://www.drupal.org/project/devel/issues/2677218#comment-10907984 -->
        <drush command="php-eval">
           <param>'node_access_rebuild();'</param>
        </drush>
    </target>

    <!-- Target: install-drupal-by-path -->
    <target name="install-drupal-by-path" hidden="true">
        <drush command="status" returnProperty="drupal.site_padded"><option name="field" value="site" /></drush>
        <php function="trim" returnProperty="drupal.site"><param value="${drupal.site_padded}" /></php>

        <property name="drupal.files" value="${drupal.site}/files" />
        <property name="drupal.private" value="${drupal.site}/private" />

        <!-- Swap out the composer file for our git repository -->
        <delete dir="${drush.root}/modules/contrib/search_api_federated_solr" />
        <symlink link="${drush.root}/modules/contrib/search_api_federated_solr" target="../../../../../src/search_api_federated_solr" />
        <delete dir="${drush.root}/modules/contrib/search_api_field_map" />
        <symlink link="${drush.root}/modules/contrib/search_api_field_map" target="../../../../../src/search_api_field_map" />

        <!-- The sites subdirectory and settings.php should be writable; Drupal will
             change the permissions on this directory after install. -->
        <chmod file="${drush.root}/${drupal.site}" mode="777" />
        <chmod file="${drush.root}/${drupal.site}/settings.php" mode="777" />

        <!-- Delete and re-create the public files directory -->
        <delete dir="${drush.root}/${drupal.files}" />
        <mkdir dir="${drush.root}/${drupal.files}" mode="777" />

        <!-- Delete and re-create the private files directory -->
        <if>
            <and>
                <isset property="drupal.private"/>
                <not>
                    <equals arg1="${drupal.private}" arg2="" trim="true" />
                </not>
            </and>
            <then>
                <delete dir="${drush.root}/${drupal.private}" />
                <mkdir dir="${drush.root}/${drupal.private}" mode="777" />
            </then>
        </if>

        <!-- Install the site. -->
        <drush command="site-install" assume="yes">
            <option name="account-name">admin</option>
            <option name="account-pass">admin</option>
            <option name="site-name">${site.name}</option>
            <!-- We should be able to use the existing-config flag, but cannot.
                 See https://www.drupal.org/project/drupal/issues/2982052 -->
            <param>config_installer</param>
        </drush>

        <!-- The public files directory, and everything in it, needs to be world writable. -->
        <exec command="chmod -R 777 ${drush.root}/${drupal.files}" checkreturn="true" />
    </target>


    <!-- Target: install-d7 -->
    <target name="install-d7" description="Install the D7 site">
        <phingcall target="init" />
        <!-- Drush 9/10 are not compatible with Drupal 7, so we can't use a regular drush
             alias. Hence, we provide drush.root and drush.uri, which the <drush> task
             uses in its commands. -->
        <property name="drush.root" value="web/d7/docroot" />
        <property name="drush.uri" value="http://d7.fs-demo.local" />

        <exec command="composer install" dir="${drush.root}/.." passthru="true" />

        <!-- Swap out the composer file for our git repository -->
        <delete dir="${drush.root}/sites/all/modules/contrib/search_api_federated_solr" />
        <symlink link="${drush.root}/sites/all/modules/contrib/search_api_federated_solr" target="../../../../../../../src/search_api_federated_solr-7.x" />

        <drush command="site-install" assume="yes">
            <option name="site-name">Drupal 7 - Federated Search</option>
            <option name="account-pass">admin</option>
            <param>standard</param>
        </drush>

        <!-- The public files directory, and everything in it, needs to be world writable. -->
        <exec command="chmod -R 777 ${drush.root}/sites/default/files" checkreturn="true" />

        <!-- Install default configuration and content. -->
        <drush command="pm-enable" assume="yes">
            <param>features_search_api_config</param>
            <param>federated_default_content</param>
        </drush>
        <!-- The public files directory, and everything in it, needs to be world writable,
             but the content creation step changes that, so we do it again. -->
        <exec command="chmod -R 777 ${drush.root}/sites/default/files" checkreturn="true" />
        <!-- The feature is not loading properly due to file permissions, but does reload correctly. -->
        <drush command="features-revert" assume="yes">
            <param>federated_default_content</param>
        </drush>
        <drush command="pm-disable" assume="yes">
            <param>overlay</param>
            <param>toolbar</param>
        </drush>
        <drush command="search-api-reindex" assume="yes" />
        <drush command="search-api-index" assume="yes" />
    </target>


    <!-- Target: install-d7 -->
    <target name="install-d7-domain" description="Install the D7 domain site">
        <phingcall target="init" />
        <!-- Drush 9/10 are not compatible with Drupal 7, so we can't use a regular drush
             alias. Hence, we provide drush.root and drush.uri, which the <drush> task
             uses in its commands. -->
        <property name="drush.root" value="web/d7-domain/docroot" />
        <property name="drush.uri" value="http://d7-1.fs-demo.local" />

        <exec command="composer install" dir="${drush.root}/.." passthru="true" />

        <!-- Swap out the composer file for our git repository -->
        <delete dir="${drush.root}/sites/all/modules/contrib/search_api_federated_solr" />
        <symlink link="${drush.root}/sites/all/modules/contrib/search_api_federated_solr" target="../../../../../../../src/search_api_federated_solr-7.x" />

        <!-- Copy settings files. Domain Access must be added after install. -->
        <chmod file="${drush.root}/sites/default/" mode="0775" />
        <chmod file="${drush.root}/sites/default/settings.php" mode="0775" />
        <copy file="config/sites/d7-domain/settings-install.php" tofile="${drush.root}/sites/default/settings.php" overwrite="true" />

        <drush command="site-install" assume="yes">
            <option name="site-name">Domain 7 - Federated Search</option>
            <option name="account-pass">admin</option>
            <param>standard</param>
        </drush>

        <!-- Copy settings files that enable Domain Access. -->
        <chmod file="${drush.root}/sites/default/" mode="0775" />
        <chmod file="${drush.root}/sites/default/settings.php" mode="0775" />
        <copy file="config/sites/d7-domain/settings.php" tofile="${drush.root}/sites/default/settings.php" overwrite="true" />

        <!-- The public files directory, and everything in it, needs to be world writable. -->
        <exec command="chmod -R 777 ${drush.root}/sites/default/files" checkreturn="true" />

        <!-- Install default configuration and content. -->
        <drush command="pm-enable" assume="yes">
            <param>features_search_api_config</param>
            <param>federated_default_content</param>
        </drush>
        <!-- The public files directory, and everything in it, needs to be world writable,
             but the content creation step changes that, so we do it again. -->
        <exec command="chmod -R 777 ${drush.root}/sites/default/files" checkreturn="true" />
        <!-- The feature is not loading properly due to file permissions, but does reload correctly. -->
        <drush command="features-revert" assume="yes">
            <param>federated_default_content</param>
        </drush>
        <drush command="pm-disable" assume="yes">
            <param>overlay</param>
            <param>toolbar</param>
        </drush>
        <drush command="search-api-reindex" assume="yes" />
        <drush command="search-api-index" assume="yes" />

        <!-- Rebuild node acces permissions. No direct drush command for this
             as per https://www.drupal.org/project/devel/issues/2677218#comment-10907984 -->
        <drush command="php-eval">
           <param>'node_access_rebuild();'</param>
        </drush>
    </target>


    <!-- Target: init -->
    <target name="init" description="Initialize the repo for development">
        <available file="src" type="dir" property="src.checkout" value="y" />
        <if>
            <equals arg1="${src.checkout}" arg2="y" />
            <then>
              <echo message="Git sources already checked out." />
            </then>
            <else>
              <mkdir dir="src" mode="777" />
              <echo message="git clone --branch=8.x-2.x git@github.com:palantirnet/search_api_federated_solr.git" />
              <exec command="git clone --branch=8.x-2.x git@github.com:palantirnet/search_api_federated_solr.git" dir="src" checkreturn="true" />
              <exec command="git remote add drupal git@git.drupal.org:project/search_api_federated_solr.git" dir="src/search_api_federated_solr" checkreturn="true" />
              <echo message="git clone --branch=8.x-1.x git@github.com:palantirnet/search_api_field_map.git" />
              <exec command="git clone --branch=8.x-1.x git@github.com:palantirnet/search_api_field_map.git" dir="src" checkreturn="true" />
              <exec command="git remote add drupal git@git.drupal.org:project/search_api_field_map.git" dir="src/search_api_field_map" checkreturn="true" />
              <echo message="git clone --branch=7.x-2.x git@github.com:palantirnet/search_api_federated_solr.git search_api_federated_solr-7.x" />
              <exec command="git clone --branch=7.x-2.x git@github.com:palantirnet/search_api_federated_solr.git search_api_federated_solr-7.x" dir="src" checkreturn="true" />
              <exec command="git remote add drupal git@git.drupal.org:project/search_api_federated_solr.git" dir="src/search_api_federated_solr-7.x" checkreturn="true" />
            </else>
          </if>
    </target>


    <!-- Target: solr-clear -->
    <target name="solr-clear" description="Delete all entries in the local Solr 'drupal8' core">
        <input message="Would you like to clear the SOLR index? This action cannot be undone." propertyName="dump.confirm" defaultValue="y" validArgs="y,n" />
        <if>
            <equals arg1="${dump.confirm}" arg2="y" />
            <then>
                <!-- Send an update command to the solr core telling it to delete everything.
                     The query needs to be escaped to pass through phing, but here it is unescaped:
                     http://federated-search-demo.local:8984/solr/drupal8/update?commit=true&stream.body=<delete><query>*:*</query></delete>
                -->
                <exec command="curl &apos;http://federated-search-demo.local:8983/solr/drupal8/update?commit=true&amp;stream.body&#61;&lt;delete&gt;&lt;query&gt;*:*&lt;/query&gt;&lt;/delete&gt;&apos;" passthru="true" escape="false" checkreturn="true" />
                <echo message="Your Solr is now clean."/>
            </then>
        </if>
    </target>

    <!-- Target: solr-reindex-all -->
    <target name="solr-reindex-all" description="Delete and rebuild the SOLR index">
        <property name="index.domains" value="y" />
        <phingcall target="solr-reindex" />
    </target>

    <!-- Target: solr-reindex -->
    <target name="solr-reindex" description="Delete and rebuild the SOLR index">
        <exec command="curl &apos;http://federated-search-demo.local:8983/solr/drupal8/update?commit=true&amp;stream.body&#61;&lt;delete&gt;&lt;query&gt;*:*&lt;/query&gt;&lt;/delete&gt;&apos;" passthru="true" escape="false" checkreturn="true" />
        <echo message="Your Solr is now clean." />

        <!-- Index Drupal 7 -->
        <exec command="drush --root='web/d7/docroot' --uri='http://d7.fs-demo.local' search-api-reindex federated_search -y" />
        <exec command="drush --root='web/d7/docroot' --uri='http://d7.fs-demo.local' search-api-index federated_search -y" />
        <echo message="Drupal 7 indexed." />

        <!-- Index Drupal 8 -->
        <exec command="drush @d8 search-api:reset-tracker federated_search -y" />
        <exec command="drush @d8 search-api:index federated_search -y" />
        <echo message="Drupal 8 indexed." />

        <if>
            <equals arg1="${index.domains}" arg2="y" />
            <then>
                <!-- Index Drupal 8 Domain -->
                <exec command="drush @d8-domain.one search-api:reset-tracker federated_search -y" />
                <exec command="drush @d8-domain.one search-api:index federated_search -y" />
                <echo message="Drupal 8 domain indexed." />
                <!-- Index Drupal 7 Domain -->
                <exec command="drush --root='web/d7-domain/docroot' --uri='http://d7-1.fs-demo.local' search-api-reindex federated_search -y" />
                <exec command="drush --root='web/d7-domain/docroot' --uri='http://d7-1.fs-demo.local' search-api-index federated_search -y" />
                <echo message="Drupal 7 domain indexed." />
            </then>
        </if>
    </target>


    <!-- Target: React settings -->
    <target name="react" description="Setup the React demo">
      <copy file="config/sites/react/settings.example.js" tofile="web/react/app/settings.js" overwrite="true" />
      <copy file="config/sites/react/custom.example.css" tofile="web/react/app/custom.css" overwrite="true" />
      <echo message="React application setup on http://react.fs-demo.local" />
    </target>


    <!-- Target: start-selenium -->
    <target name="start-selenium">
        <exec command='java -jar -Dwebdriver.chrome.driver="/usr/local/share/chromedriver/chromedriver" /usr/local/share/selenium/selenium-server-standalone.jar >/dev/null 2>&amp;1 &amp;' dir="/home" />
    </target>


    <!-- Target: behat -->
    <target name="behat">
        <phingcall target="start-selenium" />
        <exec command='vendor/bin/behat --tags=javascript' logoutput="true" checkreturn="true" />
    </target>


    <!-- Default target: list -->
    <target name="list" hidden="true">
        <exec command="phing -q -f ${phing.file} -l" passthru="true"/>
    </target>


</project>
