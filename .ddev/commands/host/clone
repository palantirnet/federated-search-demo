#!/bin/bash

## Description: Checkout a module using git clone
## Usage: clone MODULE_NAME [-b BRANCH_NAME | -t TAG_NAME] [-c] [-o ORIGIN_PATH]
## Example: ddev clone admin_toolbar\nddev clone my_module -b develop -o git@github.com:palantirnet

help() {
  echo "Usage: clone MODULE_NAME [-b BRANCH_NAME | -t TAG_NAME] [-c]"
  echo "Options:"
  echo "  -b    Specify a branch to check out."
  echo "  -t    Specify a tag to check out."
  echo "  -c    Clone the repo as a contributor (defaults to maintainer; ignored if origin is provided)."
  echo "  -o    Origin path, if the module is not on drupal.org."
  exit
}

# Set getopts flags. Numeric flags are positional arguments and must be followed by a colon.
FLAGS='b:t:c1:o:'

# Assign ascending numeric flags to positional arguments.
POS_ARG_CT=0
OPTION_EXPECTS_ARG=0
for arg in "$@"
do
  shift
  case "$arg" in
    \-*)
      if [[ "$FLAGS" = *"$(echo $arg | sed 's/-//g'):"* ]]
      then
        OPTION_EXPECTS_ARG=1
      fi
      set -- "$@" "$arg"
      ;;
    *)
      if [ $OPTION_EXPECTS_ARG = 0 ]
      then
        POS_ARG_CT=$((POS_ARG_CT+1))
        set -- "$@" "-$POS_ARG_CT" "$arg"
      else
        OPTION_EXPECTS_ARG=0
        set -- "$@" "$arg"
      fi
      ;;
  esac
done

TYPE="maintainer"

while getopts $FLAGS opt
do
  case $opt in
    # Flagged arguments
    b)
      BRANCH="$OPTARG"
      ;;
    t)
      TAG="$OPTARG"
      ;;
    c)
      TYPE="contributor"
      ;;
    o)
      ORIGIN="$OPTARG"
      ;;
    # Positional arguments
    1)
      MODULE="$OPTARG"
      ;;
    ?)
      help
      ;;
  esac
done

if [ -z "$MODULE" ]
then
  echo "You must specify a module; e.g. 'ddev clone admin_toolbar'"
  help
fi

# Ensure that user did not specify both a tag and a branch.
if [ ! -z "$TAG" ] && [ ! -z "$BRANCH" ]
then
  echo "You cannot specify both a tag and a branch."
  help
fi

echo "============"
echo "Checking out $MODULE as a $TYPE"
echo "============"

# Remove any existing checkouts.
if [ -d "web/modules/contrib/$MODULE" ]
then
  echo "Deleting an existing checkout and rebuilding..."
  rm -rf "web/modules/contrib/$MODULE"
fi

cd web/modules/contrib

# Set the origin to d.o if one was not provided, depending on type.
if [ -z "$ORIGIN" ]
then
  if [ "$TYPE" = "contributor" ]
  then
    ORIGIN="https://git.drupalcode.org/project"
  else
    ORIGIN="git@git.drupal.org:project"
  fi
fi

echo "git clone $ORIGIN/$MODULE.git"
git clone "$ORIGIN/$MODULE.git"

# If specified, check out a branch or tag.
cd $MODULE
if [ ! -z $TAG ]
then
  echo "git checkout $TAG -b $TAG"
  git checkout "$TAG" -b "$TAG"
elif [ ! -z "$BRANCH" ]
then
  echo "git checkout --track origin/$BRANCH"
  git checkout --track origin/"$BRANCH"
fi

# Notify about composer install if the module has dependencies.
if [ -f "web/modules/contrib/$MODULE/composer.json" ]
then
  echo "This module contains a composer.json file."
  echo "You may need to run composer install from the project root."
fi

